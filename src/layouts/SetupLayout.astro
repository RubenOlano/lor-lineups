---
import { type CollectionEntry } from "astro:content";
import BaseLayout from "./BaseLayout.astro";
type Props = CollectionEntry<"setup">["data"];

const { agent, map, site, isAttacking, isUlt, video, images, title } =
	Astro.props as Props;
---

<BaseLayout
	title={`${agent} Setup on ${map} - ${site} Site`}
	keywords={[agent, map, site]}
>
	<div class="max-w-4xl lg:max-w-5xl mx-auto py-8 px-6">
		<header class="text-center mb-12">
			<h1
				class="text-2xl md:text-4xl font-extrabold text-gray-900 mb-4"
				transition:name={title}
			>
				{title}
			</h1>
			<p class="text-lg md:text-xl text-gray-700 font-light">
				{isAttacking ? "Attacking" : "Defending"} - {
					isUlt ? "Ultimate" : "Regular"
				} Setup
			</p>
		</header>
		<section class="mb-12">
			<h2
				class="text-2xl md:text-3xl font-semibold text-gray-900 text-center mb-8"
			>
				Video Guide
			</h2>
			<div
				class="relative pb-[56.25%] h-0 overflow-hidden rounded-lg shadow-lg"
			>
				<iframe
					class="absolute top-0 left-0 w-full h-full rounded-lg"
					src={video}
					allowfullscreen
					title={`Video guide for ${agent} on ${map} site ${site}`}></iframe>
			</div>
		</section>

		<slot />

		{
			images.length > 0 && (
				<section class="bg-white p-6 md:p-8 rounded-lg shadow-lg mb-10">
					<h2 class="text-2xl md:text-3xl font-semibold text-gray-900 text-center mb-6">
						Image References
					</h2>
					<div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
						{images.map((image, index) => (
							<div class="overflow-hidden rounded-lg shadow-md transition-transform duration-300 transform hover:scale-105">
								<img
									src={image}
									alt={`Reference image ${index + 1} for ${agent} on ${map} site ${site}`}
									class="w-full h-auto object-cover"
								/>
							</div>
						))}
					</div>
				</section>
			)
		}
	</div>
</BaseLayout>
