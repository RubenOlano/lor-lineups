---
import { agentMap } from "@/util/agents";

const uniqueAgents = Object.keys(agentMap).map(
    (agent) => agent[0]!.toUpperCase() + agent.slice(1),
);

type Props = {
    currentAgent?: string;
};

const { currentAgent } = Astro.props as Props;
---

<div class="flex flex-col space-y-4">
    <label for="agent" class="text-lg font-semibold text-gray-800">Agent</label>
    <div class="relative">
        <select
            id="agent"
            name="agent"
            class="w-full p-4 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-300 ease-in-out hover:border-blue-500"
        >
            <option value="" disabled>Select an Agent</option>
            <option value=""> All Agents </option>
            {
                uniqueAgents.map((agent) => (
                    <option
                        value={agent.toLowerCase()}
                        selected={agent.toLowerCase() === currentAgent}
                    >
                        {agent}
                    </option>
                ))
            }
        </select>
    </div>
</div>

<script>
    import { navigate } from "astro:transitions/client";
    document.addEventListener("astro:page-load", () =>
        document
            .querySelector("select")
            ?.addEventListener("change", (event) => {
                const agent = (event.target as HTMLSelectElement).value;
                const url = new URL(window.location.href);
                const path = url.pathname.split("/");
                const currentMap = path[2];

                if (agent === "") {
                    navigate(`/maps/${currentMap}`);
                } else {
                    navigate(`/maps/${currentMap}/${agent}`);
                }
            }),
    );
</script>
