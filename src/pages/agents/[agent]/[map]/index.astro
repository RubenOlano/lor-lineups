---
import { getCollection } from "astro:content";
import BaseLayout from "../../../../layouts/BaseLayout.astro";
import SetupGridItem from "../../../../components/SetupGridItem.astro";
import MapSearch from "../../../../components/MapSearch.astro";
import { agentMap } from "../../../../util/agents";
import { mapMap } from "../../../../util/maps";

export async function getStaticPaths() {
    const entries = await getCollection("setup");
    const uniqueAgents = Object.keys(agentMap);
    const uniqueMaps = Object.keys(mapMap);

    return uniqueAgents
        .map((agent) => {
            return uniqueMaps.map((map) => {
                const filteredSetups = entries.filter(
                    (entry) =>
                        entry.data.agent.toLowerCase() ===
                            agent.toLowerCase() &&
                        entry.data.map.toLowerCase() === map.toLowerCase(),
                );
                return {
                    params: {
                        agent: agent.toLowerCase(),
                        map: map.toLowerCase(),
                    },
                    props: {
                        setups: filteredSetups,
                    },
                };
            });
        })
        .flat();
}

const { agent, map } = Astro.params;
const { setups } = Astro.props;

const title = `Setups for ${agent[0]!.toUpperCase()}${agent.slice(1)} on ${map[0]!.toUpperCase()}${map.slice(1)}`;
---

<BaseLayout {title}>
    <main class="p-4 md:p-8 bg-gray-100">
        <div class="max-w-7xl mx-auto">
            <h1 class="text-4xl font-extrabold text-gray-900 mb-8 text-center">
                {title}
            </h1>

            <div class="mb-8">
                <MapSearch currentMap={map} />
            </div>

            <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-8">
                {
                    setups.length === 0 && (
                        <div class="text-center text-gray-600">
                            No setups found for
                            {agent[0]!.toUpperCase()}
                            {agent.slice(1)}
                            on
                            {map[0]!.toUpperCase()}
                            {map.slice(1)}.
                        </div>
                    )
                }
                {setups.map((setup) => <SetupGridItem {...setup.data} />)}
            </div>
        </div>
    </main>
</BaseLayout>
